public class Main
{
    static Node head=null,tail=null;  //initialisg null is optional
    public static int size;
    public class Node
    {
        int data;
        Node next;
        public Node(int data)
        {
            this.data=data;
        }
      }
    void display()
    {
        Node current=head;
        while(current!=null)
        {
            System.out.print(current.data+"->");
            current=current.next;
        }
        System.out.println("null "+ "size= "+size);
        
    }
    void addfirst(int data)
    {
        Node newNode=new Node(data);
        newNode.next=head;
        head=newNode;
        if(tail==null)
        tail=head;
        size++;
       
    }
    void addlast(int data)
    {
        Node newNode= new Node(data);
        if(tail==null)
         {
             addfirst(data);
             return;
         }
         tail.next=newNode;
         tail=newNode;
         size++;
    }
    public static Node get(int index)   //this function is used to get the index of LL
    {
        Node current=head;
        for(int i=1;i<=index;i++)    //we start i from 1,not 0
        { current=current.next;}  //this will give the index of node  asked 
        return current;
        
    }
    public  void insert(int data,int index)
    {
        if(index==0)
        {
            addfirst(data);
            return;   
        }
        if(index+1==size)
        {addlast(data);
            return;
        }
        Node curr=get(index);
        Node value=new Node(data);
        value.next=curr.next;
        curr.next=value;
        size++;
    }
    public void deletefirst()
    {
        if(head==null)
        {
         System.out.println("Empty LL");
         return;
        }
        head=head.next;
        size--;
    }
    public void deletelast()
    {
        if(head==null)
        {
            System.out.println("empty ll");
            return;
        }
        if(head.next==null)
        {
            head=null;
            System.out.println("null");
            size--;
            return;
        }
        Node prev=get(size-2);
        prev.next=null;
        tail=prev;
        size--;
    }
    public void delete(int index)
    {
        if(index==0)
        {
            deletefirst();
            return;
        }
        if(index+1==size)
        {
            deletelast();
            return;
        }
        Node prev=get(index-1);
        prev.next=prev.next.next;
        size--;
    }
	public static void main(String[] args) {
		Main list=new Main();
		list.addfirst(2);
		list.addfirst(3);
		list.addfirst(8);
		list.addlast(7);
		list.display();
		Node prev=get(3);
		System.out.println(get(2).data);
		System.out.println(prev.data);
		list.insert(18,2);
		list.display();
	        list.deletefirst();
	        list.deletelast();
	        list.display();
	        list.delete(1);
	        list.display();
	}
}
